local dirtylarry = require "dirtylarry/dirtylarry"

local sys_name = sys.get_sys_info().system_name
local gameIDs = {
    ["Android"] = "5f8c98dcb17ce38289095c47",
}

local BACK_KEY = hash("back")

local REWARDED = "REWARDED-2885630"
local VIDEO = "DEFAULT-5294469"

--log logic
local gprint = print
local log = {}
local text = ""
_G.print = function(...)
    gprint(...)
    local args = {...}
    local num = #log+1
    log[num] = "--"
    for k, v in pairs(args) do
        log[num] = log[num] .. tostring(v) .. " "
    end
    log[num] = log[num] .. "\n"
    text = ""
    if num > 7 then
        table.remove(log, 1)
    end
    for k, v in pairs(log) do
        text = text .. v
    end
end

function update()
    gui.set_text(gui.get_node("console"), text)
end
-- end log logic

local function btn_ready(self, button_name)
    gui.set_color(gui.get_node(button_name.."/larrylabel"), vmath.vector4(1, 1, 1, 1))
end

local function vungle_ads_callback(self, msg_type, message)
    if msg_type == vungle.TYPE_IS_READY then
        print(message.placementId, " is ready")
        btn_ready(self, message.placementId)
    elseif msg_type == vungle.TYPE_DID_START then
        print(message.placementId, " started")
    elseif msg_type == vungle.TYPE_DID_ERROR then
        print(message.placementId, " error")
        print(message.message) -- error message
    elseif msg_type == vungle.TYPE_DID_FINISH then
        print(message.placementId, " Ad finished")
    elseif msg_type == vungle.TYPE_DID_REWARD then
        print(message.placementId, " Rewarded Ad Complete")
    elseif msg_type == vungle.TYPE_INITIALIZED then
        print("Vungle initialized")
    elseif msg_type == vungle.TYPE_INIT_ERROR then
        print("Vungle init error")
        print(message.message)
    end
end

function init(self)
    msg.post(".", "acquire_input_focus")
    if vungle then
        print("isInitialized:", vungle.isInitialized())
        print("isReady(video):", vungle.isReady(VIDEO))
        print("isReady(rewardedVideo):", vungle.isReady(REWARDED))
        vungle.setCallback(vungle_ads_callback)
    end
end

function final(self)
    print("Final! Remove Callback!")
    if vungle then
        vungle.setCallback()
    end
end

local function init_vungle_ads(self, appId)
    if vungle and appId then
        if not vungle.isInitialized() then
            print("Init SDK with id", appId)
            vungle.initialize(appId, vungle_ads_callback)
        else
            print("VungleAds already inited. Just set callback one more time")
            vungle.setCallback(vungle_ads_callback)
            if vungle.isReady(REWARDED) then
                btn_ready(self, REWARDED)
            end
            if vungle.isReady(VIDEO) then
                btn_ready(self, VIDEO)
            end
        end
    end
end

local function show_ad(self, placementId)
    if vungle then
        if placementId then
            vungle.show(placementId)
        end
    end
end

local function set_callback(self)
    if vungle then
        print("Set Callback!")
        vungle.setCallback(vungle_ads_callback)
    end
end

local function remove_callback(self)
    if vungle then
        print("Remove Callback!")
        vungle.setCallback(nil) -- same as vungle.setCallback()
    end
end


function on_input(self, action_id, action)
    
    dirtylarry:button("init", action_id, action, function ()
        init_vungle_ads(self, gameIDs[sys_name])
    end)

    dirtylarry:button("rewardedVideo", action_id, action, function ()
        show_ad(self, REWARDED)
    end)

    dirtylarry:button("video", action_id, action, function ()
        show_ad(self, VIDEO)
    end)

    dirtylarry:button("set_callback", action_id, action, function ()
        set_callback(self)
    end)

    dirtylarry:button("remove_callback", action_id, action, function ()
        remove_callback(self)
    end)

    if action_id == BACK_KEY and action.released then
        print("Time to exit!")
        msg.post("@system:", "exit", {code = 0})
    end

end
